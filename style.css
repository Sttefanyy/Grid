html {
  height: 100%;
  width: 100%;
}

/* body, html {
    height: 100%;
    margin: 0;
} */

body {
  max-height: 100vh;
  max-width: 100vw;
  overflow-x: hidden;
}

.container {
  display: grid;
  /* grid-template-columns: repeat(1, 1fr);
  grid-template-rows: 20vh 70vh 10vh; */
  gap: 20px;
}

.header {
  background-color: #000000;
  height: 28vh;
  /* grid-column: 1/4; */
  padding-top: 2vh;
}

#title {
  color: #ffffff;
  font-family: 'Roboto', sans-serif;
  font-size: 4vw;
  text-align: center;
}

.h1Anims {
  color: #000000;
  font-family: 'Roboto', sans-serif;
  font-size: 3vw;
  text-align: center;
  padding-top: 3vh;
}

/* .h1Anims::after {
  content: "";
  position: absolute;  
  width: 170px;
  height: 3px;
  background-color: #c90bfe;
  bottom: -5px;
  left: 0;
  right: 0;
  margin: auto;
}  */



.botoes {
  display: flex;
  justify-content: center;
  align-items: center;

}

.btn a {
  text-decoration: none;
  color: #000000;
}

.btn {
  background-color: #fecde7;
  color: #000000;
  border-radius: 1vw;
  font-family: 'Roboto', sans-serif;
  font-size: 2vw;
  padding: 1.4vh;
  margin-left: 1vw;
  transition: all linear 160ms;
}

.btn:hover {
  transform: scale(1.05);
  background-color: #d049d0;
}

#h2inic a {
  text-decoration: none;
  color: #000000;
}

#h2inic {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #fecde7;
  color: #000000;
  border-radius: 1vw;
  font-family: 'Roboto', sans-serif;
  font-size: 2vw;
  padding: 1.4vh;
  margin-left: 40vw;
  width: 16vw;
  transition: all linear 160ms;

}

#h2inic:hover {
  transform: scale(1.05);
  background-color: #d049d0;
}



section {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(270px, 1fr));
  gap: 35px;
  margin-top: 3vw;
  margin-left: 4vw;
  margin-right: 4vw;
  margin-bottom: 3vw;
}


.grid-item {
  background-color: #000000;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  text-align: center;
  padding: 16px;
  font-size: 18px;
  cursor: pointer;

  /* height: clamp(400px, 90vh, 500px);
    width: clamp(250px, 75vw, 350px);  */

}

.grid-item:hover {
  /* transform: scale(1.05);
  transition: transform 0.3s ease-in-out;  */
  box-shadow: 0 8px 16px rgba(0, 0, 0, 11);
  background: #170057;
}


.grid-item img {
  width: 100%;
  height: 100%;
  object-fit: fill;
  border-radius: 8px;
}



.h2Modal {
  font-size: 2vw;
  color: black;
  font-family: 'Pacifico', cursive;
}

.imageModal img {
  width: 32vw;
  height: 76vh;
  /* width: clamp(200px, 70vh, 300px);
  height: clamp(200px, 70vh, 300px); */
  border: 3px solid black;
  border-radius: 20px;
}

.pModal {
  font-size: 2.2vw;
  font-family: 'Pacifico', cursive;
}

.modal {
  border-radius: 25px;
  border: 3px solid black;
  width: 75vw;
  /* height: 55vw; */
  /* max-height: 120vh; */
  height: 95vh;
  animation: animate;
  animation-duration: 800ms;
  background-color: #8b62fe;
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}


@keyframes animate {

  from {
    opacity: 1;
  }

  from {
    opacity: 0;
  }
}


.fechar {
  width: 30px;
  height: 30px;
  /* background-color:rgba(168, 249, 255, 0.9); */
  background-color: #ff8800;
  border-radius: 55%;
  float: right;
  cursor: pointer;
  font-size: 20px;
  font-family: 'Pacifico', cursive;
  border: 2px solid black;
}

.fechar span {
  /* color:rgba(255, 0, 0, 0.9); */
  color: black;
}



.gridModal {
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  /* grid-template-rows: repeat(4, 1fr); */
}

.imageModal {
  grid-area: 1 / 1 / 6 / 5;
  padding-left: 20px;
  padding-top: 30px;

}

.pModal {
  grid-area: 1 / 5 / 6 / 9;
  padding-right: 70px;
}


/*container

- display: grid -- iniciar dizendo oq é

- grid-template-columns: -- fatiar as colunas dizendo quantas tem

- grid-template-rows: -- fatiar as linhas dizendo quantas tem

   - grid-gap: -- espaço entre as linhas e colunas
   - grid-auto-rows: -- fatiar as linhas automaticamente
   - grid-auto-columns: -- fatiar as colunas automaticamente

- grid-template-areas: -- fatiar as linhas e colunas automaticamente e criar nomes para elas

itens

- grid-column -- onde ficara o item que fatiou

  - grid-column-start -- onde começara a coluna
  - grid-column-end -- onde terminara a coluna

- grid-row -- onde ficara o item que fatiou

  - grid-row-start -- onde começara a linha
  - grid-row-end -- onde terminara a linha

- grid-area -- onde ficara o item que fatiou


uso raro e mais usados quando se usa px

justify-content: -- alinhar os itens horizontalmente
align-content: -- alinhar os itens verticalmente

*/


/* .header {
  grid-area: header;
  background-color: #000000;
  padding: 5vw;
  text-align: center;
  font-size: 35px;
} */